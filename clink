#!/bin/sh

need_item() {
    if [ -z $1 ]; then
        echo "Not enough input"
        exit 1
    fi
}

display_usage() {
    echo "Usage:"
    echo "$0 [FLAGS] IMAGE"
    echo "Flags:"
    echo "--install-shell-func IMAGE"
    echo "--get IMAGE"
    echo "Help:"
    echo "-h, --help"
}

run_cli() {
    case "$1" in
    --install-shell-func)
        shift
        need_item $1
        image=$1
        echo "Installing $image"
        # FIXME
        ;;
    --get)
        shift
        need_item $1
        image=$1
        docker pull $image
        ;;
    -h|--help)
        display_usage
        exit 1
        ;;
    *)
        need_item $1
        image=$1
        echo "Running: $image $@"
        run_source
        command_not_found "$@"
    esac
}

run_source() {
    # If we are symlink, find out our true path.
    # (Note: we only dereference one level.)
    if [[ -L "$SCRIPT_FILE" ]]; then
        SCRIPT_FILE="$(readlink "$SCRIPT_FILE")"
    fi

    SCRIPT_DIR="$(dirname "$SCRIPT_FILE")"
    source "$SCRIPT_DIR/source_commands"
}

# We need to find out:
# - where we are installed,
# - if we are executed or sourced.
# Detection mechanisms will depend on the shell used.

if [[ -n "${BASH_SOURCE[0]}" ]]; then
    # This special variable is set only in bash.
    # It is *always* the name of the file.
    SCRIPT_FILE="${BASH_SOURCE[0]}"
    # If we are executed, $0 is the name of the file.
    if [[ "$SCRIPT_FILE" = "$0" ]]; then
        SCRIPT_MODE=exec
    else
        SCRIPT_MODE=source
    fi
fi

if [[ -n "$ZSH_EVAL_CONTEXT" ]]; then
    # This special variable is set only in zsh.
    SCRIPT_FILE="$0"
    # ZSH_EVAL_CONTEXT is "toplevel" when we are executed,
    # and "toplevel:file" if we are sourced.
    if [[ "$ZSH_EVAL_CONTEXT" = toplevel ]]; then
        SCRIPT_MODE=exec
    else
        SCRIPT_MODE=source
    fi
fi

case "$SCRIPT_MODE" in
    source) run_source;;
    exec) run_cli "$@";;
    *) echo "Sorry, I could not detect which shell you are using.";;
esac


